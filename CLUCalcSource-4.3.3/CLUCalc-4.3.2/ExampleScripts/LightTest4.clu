_DoAnimate = 1;
_FrameBoxSize = 0;

?Angle = ((Time * 180) % 360) * RadPerDeg;
R = RotorE3(0,1,0, Angle);

A = VecE3(1) + VecE3(0,1,2);
Dir = R * VecE3(0,-0.1,-1) * ~R;

:Blue;
A;


fSpotCutOff = 30;

SetAmbientLight(DWhite);//Color(0.3, 0.3, 0.3, 1));
EnableLight(0, 0);
EnableLight(1, 1);

//if (ExecMode == EM_CHANGE)
EnableLightFixed(1, 0);
SetLightPos(1, A);
SetLightAmbientCol(1, Black);
SetLightDiffuseCol(1, MMagenta);
SetLightSpecularCol(1, MGray);
SetLightSpotDir(1, Dir);
SetLightSpotCutOff(1, fSpotCutOff);
SetLightSpotExp(1, 5);
SetLightAttenuation(1, 0, 0, 0.2);


DrawCone(A+VecE3(0,0,0.05), 0.3*Dir, 0.3*tan((fSpotCutOff-5)*RadPerDeg));

:N3_SOLID; 
:MRed; 
:SphereN3(0,0.6,0, 0.5);

if (ExecMode & EM_CHANGE ||
	ExecMode & EM_LINK)
{   
	imgTex = ReadImg("tex_wood.png");
	
	if (ReadVar("AnimScene1.xml", lScene) != "OK")
	{
		lScene = List(2);
		Surface -> lScene(1);
		Cyl -> lScene(2);
		
		Surface = [];
		
		SetGaussPars(0, 0.1);
		
		Rad = 0.2;
		
		DefVarsE3();
		?PosX = A . e1;
		?PosY = A . e2;
		?PosZ = A . e3;
		
		C = VecN3(-Rad, 0, 0) ^ VecN3(0, 0, Rad)
			^ VecN3(Rad, 0, 0);
		
		T = TranslatorN3(PosX, 0, PosZ);
		C = T*C*~T;
		
		T = TranslatorN3(0, PosY+0.1, 0);
		LC = [C, T*C*~T];
		
		:MGreen;
		Cyl = DrawCircleSurface(LC);
		
		bFirst = 1;
		
		StepX = 0.4;
		StepY = 0.4;
		
		MinX = -5;
		MaxX = 5;
		MinY = -5;
		MaxY = 5;
		
		NX = 1;
		NY = 1;
		
		wx = 2*Pi*NX / (MaxX - MinX);
		wy = 2*Pi*NY / (MaxY - MinY);
		
		fAmplitude = 0.4;
		
		iWaveSteps = 20;
		iWave = 1;
		PhaseStep = 4*Pi / (iWaveSteps + 5);
		
		loop
		{
			bFirst = 1;
		
			if (iWave > iWaveSteps)
				break;
		
			?PhaseX = (iWave) * PhaseStep;
			PhaseY = -Mouse(1,2,3);

			Surface << Plot(VecE3(x, fAmplitude*cos(wx*(x+PhaseX))*cos(wy*(y+PhaseY)), -y),
							[x, MinX, MaxX, 10], [y, MinX, MaxX, 10]);
		
			iWave = iWave + 1;
		} // loop iWave
		

		WriteVar("AnimScene1.xml", lScene, 9);
		
		iWave = 1;
	}
	else
	{
		Surface -> lScene(1);
		Cyl -> lScene(2);
		iWaveSteps = Size(Surface);
		iWave = 1;
	}
}
else
{
	SetAnimateTimeStep(80);
	if (iWave > iWaveSteps)
		iWave = 1;
		
	?iWave;
	SetTexture(imgTex);
	:White;
	:Surface(iWave);

	SetTexture();
	:Red;
	:Cyl;

	iWave = iWave + 1;
}
